"use strict";(self.webpackChunkberlin_equal_street_names=self.webpackChunkberlin_equal_street_names||[]).push([[126],{7505:(t,e,n)=>{n.d(e,{G6:()=>x,Ie:()=>_,J9:()=>C,RF:()=>m,U1:()=>P,vY:()=>l,ym:()=>g});var r=n(61681),s=n(53736);const i=(t,e,n)=>[e,n],o=(t,e,n)=>[e,n,t[2]],a=(t,e,n)=>[e,n,t[2],t[3]];function l(t){return t?{originPosition:"upper-left"===t.originPosition?"upperLeft":"lower-left"===t.originPosition?"lowerLeft":t.originPosition,scale:t.tolerance?[t.tolerance,t.tolerance]:[1,1],translate:(0,r.pC)(t.extent)?[t.extent.xmin,t.extent.ymax]:[0,0]}:null}function u({scale:t,translate:e},n){return Math.round((n-e[0])/t[0])}function h({scale:t,translate:e},n){return Math.round((e[1]-n)/t[1])}function c(t,e,n){const r=[];let s,i,o,a;for(let l=0;l<n.length;l++){const c=n[l];l>0?(o=u(t,c[0]),a=h(t,c[1]),o===s&&a===i||(r.push(e(c,o-s,a-i)),s=o,i=a)):(s=u(t,c[0]),i=h(t,c[1]),r.push(e(c,s,i)))}return r.length>0?r:null}function f({scale:t,translate:e},n){return n*t[0]+e[0]}function p({scale:t,translate:e},n){return e[1]-n*t[1]}function d(t,e,n){const r=new Array(n.length);if(!n.length)return r;const[s,i]=t.scale;let o=f(t,n[0][0]),a=p(t,n[0][1]);r[0]=e(n[0],o,a);for(let t=1;t<n.length;t++){const l=n[t];o+=l[0]*s,a-=l[1]*i,r[t]=e(l,o,a)}return r}function y(t,e,n){const r=new Array(n.length);for(let s=0;s<n.length;s++)r[s]=d(t,e,n[s]);return r}function m(t,e,n,r,s){return e.x=u(t,n.x),e.y=h(t,n.y),e!==n&&(r&&(e.z=n.z),s&&(e.m=n.m)),e}function g(t,e){return t&&e?(0,s.wp)(e)?m(t,{},e,!1,!1):(0,s.l9)(e)?function(t,e,n,r,s){const l=function(t,e,n,r){const s=[],l=n?r?a:o:r?o:i;for(let n=0;n<e.length;n++){const r=c(t,l,e[n]);r&&r.length>=2&&s.push(r)}return s.length?s:null}(t,n.paths,r,s);return l?(e.paths=l,e):null}(t,{},e,!1,!1):(0,s.oU)(e)?function(t,e,n,r,s){const l=function(t,e,n,r){const s=[],l=n?r?a:o:r?o:i;for(let n=0;n<e.length;n++){const r=c(t,l,e[n]);r&&r.length>=3&&s.push(r)}return s.length?s:null}(t,n.rings,r,s);return l?(e.rings=l,e):null}(t,{},e,!1,!1):(0,s.aW)(e)?function(t,e,n,r,s){return e.points=function(t,e,n,r){return c(t,n?r?a:o:r?o:i,e)}(t,n.points,r,s),e}(t,{},e,!1,!1):(0,s.YX)(e)?function(t,e,n,r,s){return e.xmin=u(t,n.xmin),e.ymin=h(t,n.ymin),e.xmax=u(t,n.xmax),e.ymax=h(t,n.ymax),e}(t,{},e):null:null}function C(t,e,n,s,l){return(0,r.pC)(n)&&(e.points=function(t,e,n,r){return d(t,n?r?a:o:r?o:i,e)}(t,n.points,s,l)),e}function P(t,e,n,s,i){return(0,r.Wi)(n)||(e.x=f(t,n.x),e.y=p(t,n.y),e!==n&&(s&&(e.z=n.z),i&&(e.m=n.m))),e}function _(t,e,n,s,l){return(0,r.pC)(n)&&(e.rings=function(t,e,n,r){return y(t,n?r?a:o:r?o:i,e)}(t,n.rings,s,l)),e}function x(t,e,n,s,l){return(0,r.pC)(n)&&(e.paths=function(t,e,n,r){return y(t,n?r?a:o:r?o:i,e)}(t,n.paths,s,l)),e}},80126:(t,e,n)=>{n.r(e),n.d(e,{default:()=>v});var r=n(27755),s=n(61681),i=n(7958),o=n(14685),a=n(95247),l=(n(4745),n(39994),n(37116)),u=n(24568),h=(n(7505),n(59659),n(12512));class c{constructor(t,e,n){this.uid=t,this.geometry=e,this.attributes=n,this.visible=!0,this.objectId=null,this.centroid=null}}class f{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}(0,l.Ue)(),(0,u.Ue)();var p=n(12065);function d(t,e){return e}function y(t,e,n,r){switch(n){case 0:return P(t,e+r,0);case 1:return"lowerLeft"===t.originPosition?P(t,e+r,1):function({translate:t,scale:e},n,r){return t[r]-n*e[r]}(t,e+r,1)}}function m(t,e,n,r){return 2===n?P(t,e,2):y(t,e,n,r)}function g(t,e,n,r){return 2===n?P(t,e,3):y(t,e,n,r)}function C(t,e,n,r){return 3===n?P(t,e,3):m(t,e,n,r)}function P({translate:t,scale:e},n,r){return t[r]+n*e[r]}class _{constructor(t){this.options=t,this.geometryTypes=["point","multipoint","polyline","polygon"],this.previousCoordinate=[0,0],this.transform=null,this.applyTransform=d,this.lengths=[],this.currentLengthIndex=0,this.toAddInCurrentPath=0,this.vertexDimension=0,this.coordinateBuffer=null,this.coordinateBufferPtr=0,this._attributesConstructor=()=>{}}createFeatureResult(){return new f}finishFeatureResult(t){if(this.options.applyTransform&&(t.transform=null),this._attributesConstructor=()=>{},this.coordinateBuffer=null,this.lengths.length=0,!t.hasZ)return;const e=(0,a.k)(t.geometryType,this.options.sourceSpatialReference,t.spatialReference);if(!(0,s.Wi)(e))for(const n of t.features)e(n.geometry)}createSpatialReference(){return new o.Z}addField(t,e){t.fields.push(h.Z.fromJSON(e));const n=t.fields.map((t=>t.name));this._attributesConstructor=function(){for(const t of n)this[t]=null}}addFeature(t,e){const n=this.options.maxStringAttributeLength?this.options.maxStringAttributeLength:0;if(n>0)for(const t in e.attributes){const r=e.attributes[t];"string"==typeof r&&r.length>n&&(e.attributes[t]="")}t.features.push(e)}addQueryGeometry(t,e){const{queryGeometry:n,queryGeometryType:r}=e,s=(0,p.$g)(n.clone(),n,!1,!1,this.transform),i=(0,p.di)(s,r,!1,!1);let o=null;switch(r){case"esriGeometryPoint":o="point";break;case"esriGeometryPolygon":o="polygon";break;case"esriGeometryPolyline":o="polyline";break;case"esriGeometryMultipoint":o="multipoint"}i.type=o,t.queryGeometryType=r,t.queryGeometry=i}prepareFeatures(t){switch(this.transform=t.transform,this.options.applyTransform&&t.transform&&(this.applyTransform=this._deriveApplyTransform(t)),this.vertexDimension=2,t.hasZ&&this.vertexDimension++,t.hasM&&this.vertexDimension++,t.geometryType){case"point":this.addCoordinate=(t,e,n)=>this.addCoordinatePoint(t,e,n),this.createGeometry=t=>this.createPointGeometry(t);break;case"polygon":this.addCoordinate=(t,e,n)=>this._addCoordinatePolygon(t,e,n),this.createGeometry=t=>this._createPolygonGeometry(t);break;case"polyline":this.addCoordinate=(t,e,n)=>this._addCoordinatePolyline(t,e,n),this.createGeometry=t=>this._createPolylineGeometry(t);break;case"multipoint":this.addCoordinate=(t,e,n)=>this._addCoordinateMultipoint(t,e,n),this.createGeometry=t=>this._createMultipointGeometry(t);break;case"mesh":case"extent":break;default:(0,r.Bg)(t.geometryType)}}createFeature(){return this.lengths.length=0,this.currentLengthIndex=0,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0,new c((0,i.D)(),null,new this._attributesConstructor)}allocateCoordinates(){const t=this.lengths.reduce(((t,e)=>t+e),0);this.coordinateBuffer=new Float64Array(t*this.vertexDimension),this.coordinateBufferPtr=0}addLength(t,e,n){0===this.lengths.length&&(this.toAddInCurrentPath=e),this.lengths.push(e)}createPointGeometry(t){const e={type:"point",x:0,y:0,spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM};return e.hasZ&&(e.z=0),e.hasM&&(e.m=0),e}addCoordinatePoint(t,e,n){switch(e=this.applyTransform(this.transform,e,n,0),n){case 0:t.x=e;break;case 1:t.y=e;break;case 2:t.hasZ?t.z=e:t.m=e;break;case 3:t.m=e}}_transformPathLikeValue(t,e){let n=0;return e<=1&&(n=this.previousCoordinate[e],this.previousCoordinate[e]+=t),this.applyTransform(this.transform,t,e,n)}_addCoordinatePolyline(t,e,n){this._dehydratedAddPointsCoordinate(t.paths,e,n)}_addCoordinatePolygon(t,e,n){this._dehydratedAddPointsCoordinate(t.rings,e,n)}_addCoordinateMultipoint(t,e,n){0===n&&t.points.push([]);const r=this._transformPathLikeValue(e,n);t.points[t.points.length-1].push(r)}_createPolygonGeometry(t){return{type:"polygon",rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{type:"polyline",paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{type:"multipoint",points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,e,n){0===n&&0==this.toAddInCurrentPath--&&(t.push([]),this.toAddInCurrentPath=this.lengths[++this.currentLengthIndex]-1,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0);const r=this._transformPathLikeValue(e,n),s=t[t.length-1];0===n&&s.push(new Float64Array(this.coordinateBuffer.buffer,this.coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT,this.vertexDimension)),this.coordinateBuffer[this.coordinateBufferPtr++]=r}_deriveApplyTransform(t){const{hasZ:e,hasM:n}=t;return e&&n?C:e?m:n?g:y}}var x=n(75844);class b{_parseFeatureQuery(t){const e=(0,x.C)(t.buffer,new _(t.options)),n={...e,spatialReference:e.spatialReference.toJSON(),fields:e.fields?e.fields.map((t=>t.toJSON())):void 0};return Promise.resolve(n)}}function v(){return new b}}}]);